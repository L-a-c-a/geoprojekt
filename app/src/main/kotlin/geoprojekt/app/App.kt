/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package geoprojekt.app

import geoprojekt.utilities.*
import geoprojekt.db.*

import io.ktor.server.netty.*
import io.ktor.routing.*
import io.ktor.application.*
import io.ktor.http.*
import io.ktor.request.*
import io.ktor.response.*
import io.ktor.server.engine.*
import io.ktor.features.*
import io.ktor.gson.*

fun main() {
	embeddedServer(Netty, port = 8000) {
    install(ContentNegotiation) { gson {} }
		routing {
      get("konf") { call.respond(KONFIG.konf!!)}  //vigyázz, kiírja a jelszót!

      get("/point/{id}")
      {
        val id = call.parameters["id"]?.toIntOrNull()?:0
        call.respond(CRUD().getPGpoint(id))
      }

      get("/read")
      {
        val id = call.request.queryParameters["id"]?.toIntOrNull()?:0
        val typ = call.request.queryParameters["type"]
        //val geojsonSomeType = CRUD().read(id, typ)
        //call.respond(geojsonSomeType)
        when (typ)
        {
          "polygon" -> call.respond(CRUD().getPGpolygon(id))
          else -> call.respond(CRUD().getPGpoint(id))
        }
      }
		}
	}.start(wait = true)
}

data class Hello(val hello:String)